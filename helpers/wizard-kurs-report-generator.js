const Composer = require('telegraf/composer');
const session = require('telegraf/session');
const Stage = require('telegraf/stage');
const Markup = require('telegraf/markup');
const WizardScene = require('telegraf/scenes/wizard');

const STEP_GROUP = 0;
const STEP_PREDMET = 1;
const STEP_DATA_M3 = 2;
const STEP_DATA_M4 = 3;
const STEP_DATA_M5 = 4;

const test1 = '["3ПКС-17-2с","МДК 03.03 Участие в интеграции программных продуктов","Разработка веб-приложения \"Учёт ремонта компьютерной техники\";Оленев Никита\nРазработка веб-приложения \"Учёт автомобилей\";Беляков Максим\nРазработка веб-приложения \"Учёт анкет абитуриентов\";Алексеев Артём\nРазработка веб-приложения \"База данных событий города\";Андреянов Павел\nРазработка веб-приложения \"База данных штрафов ГИБДД\";Бершанский Илья\nРазработка веб-приложения \"Справочник городских достопримечательностей\";Косарев Илья","Разработка веб-приложения \"Учёт заявок ЖКХ\";Магамедризаев Заур\nРазработка веб-приложения \"Учёт обращений в поликлинику\";Рябкова Ксения\nРазработка веб-приложения \"Учёт обращений в полицию\";Осина Кристина\nРазработка веб-приложения \"Учёт заказов пиццы\";Воробъёв Михаил\nРазработка веб-приложения \"Учёт внеплановых работ сотрудников\";Шапарев Алексей\nРазработка веб-приложения \"Учёт занятий в лаборатории\";Новикова Анастасия\nРазработка веб-приложения \"Журнал присутствия на занятиях\";Верещагина Екатерина\nРазработка веб-приложения \"Классификатор интернет-ресурсов\";Сорокин Николай\nРазработка веб-приложения \"Учёт рейтинга сотрудников\";Шамарина Надежда\nРазработка веб-приложения \"Автосервис\";Бимов Илья\nРазработка веб-приложения \"Каталог товаров\";Кобелев Денис\nРазработка веб-приложения \"ЗАГС\";Козина Кристина","Разработка веб-приложения \"Учёт бронирования номеров отеля\";Дадаев Александр\nРазработка веб-приложения \"Иерархический справочник городов мира\";Васин Сергей\nРазработка веб-приложения \"Рейтинг образовательных организаций\";Горбунов Даниил"]';
const test2 = '["4ПКС-16-2","МДК 03.03 Участие в интеграции программных продуктов","Разработка веб-приложения \"Учёт анкет абитуриентов\";Сахаров Дмитрий\nРазработка веб-приложения \"База данных событий города\";Черников Вадим\nРазработка веб-приложения \"Справочник городских достопримечательностей\";Енышев Евгений\nРазработка веб-приложения \"Учёт рейтинга сотрудников\";Цыганов Дмитрий\nРазработка веб-приложения \"Учёт заказов на пошив индивидуального костюма\";Курылев Андрей","Разработка веб-приложения \"Учёт бронирования номеров отеля\";Антонов Дмитрий\nРазработка веб-приложения \"Учёт обращений в полицию\";Смехов Роман\nРазработка веб-приложения \"Учёт заказов пиццы\";Базулина Юлия\nРазработка веб-приложения \"База данных штрафов ГИБДД\";Лохонкин Дмитрий\nРазработка веб-приложения \"Иерархический справочник городов мира\";Рожнов Артем\nРазработка веб-приложения \"Учёт рейтинга образовательных организаций\";Воробьев Богдан\nРазработка веб-приложения \"Информационная система ЗАГС\";Зарецкая Дарья\nРазработка веб-приложения \"Учёт заказов суши\";Пичужкин Сергей\nРазработка веб-приложения \"Справочник по книгам\";Рябов Михаил\nРазработка web-приложения для домоуправляющей компании;Соколов Павел\nРазработка веб-приложения \"Учёт автомобилей\";Родин Фёдор","Разработка веб-приложения \"Учёт заявок ЖКХ\";Дмитриев Сергей\nРазработка веб-приложения \"Учёт ремонта компьютерной техники\";Лобов Никита\nРазработка веб-приложения \"Учёт обращений в поликлинику\";Агафонов Даниил\nРазработка веб-приложения \"Учёт внеплановых работ сотрудников\";Евтюгин Артём\nРазработка веб-приложения \"Учёт занятий в лаборатории\";Солнышкова Наталья\nРазработка веб-приложения \"Журнал присутствия на занятиях\";Иванчиков Даниил\nРазработка веб-приложения \"Учёт зказов автосервиса\";Кузнецов Дмитрий\nРазработка веб-приложения \"Каталог товаров\";Рыпалов Александр"]';

//const  test = test1;

let data = [];

const krWizard = new WizardScene('krw',
    (ctx) => {
        ctx.reply('Введите имя группы:');
        return ctx.wizard.next();
    },
    (ctx) => {
      // группа
      data[STEP_GROUP] = ctx.update.message.text;
      ctx.reply('Введите название предмета:');
      return ctx.wizard.next();
    },
    (ctx) => {
      // предмет
      data[STEP_PREDMET] = ctx.update.message.text;
      ctx.reply('Введите данные на оценку 3:');
      return ctx.wizard.next();
    },
    (ctx) => {
      // на 3
      data[STEP_DATA_M3] = ctx.update.message.text;
      ctx.reply('Введите данные на оценку 4:');
      return ctx.wizard.next();
    },
    (ctx) => {
      // на 4
      data[STEP_DATA_M4] = ctx.update.message.text;
      ctx.reply('Введите данные на оценку 5:');
      return ctx.wizard.next();
    },
    (ctx) => {
      // на 5
      data[STEP_DATA_M5] = ctx.update.message.text;

      // if(test){
      //   data = JSON.parse(test);
      // } else {
      //   data[STEP_DATA_M5] = ctx.update.message.text;
      // }

      generate(data).then(result=>{
        ctx.reply('Результат', result);
        return ctx.scene.leave();
      });
    }
);

const stage = new Stage([krWizard], { default: 'krw' });

module.exports.init = (bot) => {
  bot.use(session());
  bot.use(stage.middleware());
};


function generate(data) {

  return new Promise(async resolve => {
    const gen = require('../internal_modules/odfgenerator/index');
    const path = require('path');

    const params = {
      PDFDir: path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', 'PDF'),
      ODTDir: path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', 'ODT'),
      clearWorkingDir: true,
      createPDF: true,
      removeODT: true,
      //zipPDFPackagePath: path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', 'pdf_docs.zip'),
      //zipODTPackagePath: path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', 'odt_docs.zip'),
    }

    let template = path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', 'шаблон отзыва на курсовик.odt');

    const groupName = data[0];
    const predmetName = data[1];
    const m3 = data[2].split('\n');
    const m4 = data[3].split('\n');
    const m5 = data[4].split('\n');

    let peoples = [];

    m3.forEach(eachM3 => {
      const parsedItem = eachM3.split(';');
      const theme = parsedItem[0];
      const man = parsedItem[1];
      peoples.push({
        'spec': '09.02.03 Программирование в компьютерных системах',
        'ruk': 'Слугин Владимир Георгиевич',
        'group': groupName,
        'predmet': predmetName,
        'man': man,
        'level': 'трояк',
        'theme': theme,
        'mark': '3',
        'o1': 'минимально необходимая часть курсовой работы выполнена в соответствии с заданием',
        'o2': 'В рамках курсовой работы разработано техническое задание. Этап проектирования проведен с использованием UML диаграмм. Разработана базовая часть информационной системы (ИС). Проведена работы над созданием руководства пользователя.',
        'o3': 'Курсовая работа является экспериментальной разработкой. Разработанный прототип ИС закрепил навык обучающегося на удовлетворительном уровне.',
        'o4': 'Реализация прототипа ИС выполнена в соответствии с минимально необходимыми требованиями технического задания.',
        'o5': 'Неподробный анализ предметной области и реализация лишь базовых минимально необходимых компонентов ИС',
        'mark_text': '3(удовлетворительно)',
      });
    });

    m4.forEach(eachM4 => {
      const parsedItem = eachM4.split(';');
      const theme = parsedItem[0];
      const man = parsedItem[1];
      peoples.push({
        'spec': '09.02.03 Программирование в компьютерных системах',
        'ruk': 'Слугин Владимир Георгиевич',
        'group': groupName,
        'predmet': predmetName,
        'man': man,
        'level': 'четвёрка',
        'theme': theme,
        'mark': '4',
        'o1': 'большая часть курсовой работы выполнена в соответствии с заданием',
        'o2': 'В рамках курсовой работы разработано техническое задание. Этап проектирования проведен с использованием UML диаграмм. Разработана информационная система (ИС). Разработана документация для пользователя.',
        'o3': 'Курсовая работа является экспериментальной разработкой. Разработанный прототип ИС закрепил навык обучающегося на хорошем уровне.',
        'o4': 'Реализация прототипа ИС выполнена в соответствии с основными требованиями технического задания.',
        'o5': 'Недостаточно хорошо проработана архитектура ИС в соответствии с заданием',
        'mark_text': '4(хорошо)',
      });
    });

    m5.forEach(eachM5 => {
      const parsedItem = eachM5.split(';');
      const theme = parsedItem[0];
      const man = parsedItem[1];
      peoples.push({
        'spec': '09.02.03 Программирование в компьютерных системах',
        'ruk': 'Слугин Владимир Георгиевич',
        'group': groupName,
        'predmet': predmetName,
        'man': man,
        'level': 'пять!',
        'theme': theme,
        'mark': '5',
        'mark_text': '5(отлично)',
        'o1': 'курсовая работа выполнена в полном объеме, в соответствии с заданием на курсовую работу',
        'o2': 'В рамках курсовой работы разработано техническое задание. Этап проектирования проведен с использованием UML диаграмм. Разработана информационная система (ИС) в полной мере удовлетворяющая техническому заданию. Проведено тестирование информационной системы. Разработана документация для пользователя.',
        'o3': 'Курсовая работа является экспериментальной разработкой. Разработанный прототип ИС закрепил навык обучающегося на высоком уровне.',
        'o4': 'Реализация прототипа ИС выполнена в соответствии со всеми требованиями технического задания.',
        'o5': 'Существенных замечаний нет'
      });
    });


    for (let i = 0; i < peoples.length; i++) {
      let people = peoples[i];
      let resultFileName = 'файл ' + people['mark'] + '_' + people['man'] + '.odt';
      let workingDir = path.join(__dirname, '..', 'internal_modules', 'odfgenerator', 'otzyv_kursoviki', ['tmp', '__', people['man'].replace(' ', '_')].join(''));
      console.log('gen log: ', await gen.gen(people, resultFileName, template, workingDir, params));
    }
    resolve('finish');
  });
}